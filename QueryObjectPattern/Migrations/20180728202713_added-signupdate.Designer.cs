// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QueryObjectPattern.DAL;

namespace QueryObjectPattern.Migrations
{
    [DbContext(typeof(StudioDBContext))]
    [Migration("20180728202713_added-signupdate")]
    partial class addedsignupdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QueryObjectPattern.DAL.Book<QueryObjectPattern.DAL.Spices>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("SpiceId");

                    b.HasKey("Id");

                    b.HasIndex("SpiceId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("QueryObjectPattern.DAL.ClientData", b =>
                {
                    b.Property<long>("ClientId");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdatedDateUtc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getutcdate())");

                    b.HasKey("ClientId");

                    b.ToTable("ClientData");
                });

            modelBuilder.Entity("QueryObjectPattern.DAL.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cognome")
                        .HasMaxLength(30);

                    b.Property<int?>("Matricola");

                    b.Property<string>("Nome")
                        .HasMaxLength(30);

                    b.Property<DateTime>("SignUpDate");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("QueryObjectPattern.DAL.RegulatoryEmailHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailBody");

                    b.Property<string>("EmailRecipients")
                        .HasMaxLength(2000);

                    b.Property<string>("EmailSubject")
                        .HasMaxLength(1000);

                    b.Property<Guid?>("ProductId");

                    b.Property<DateTime?>("SentDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.HasKey("Id");

                    b.ToTable("RegulatoryEmailHistory");
                });

            modelBuilder.Entity("QueryObjectPattern.DAL.SellOutImportTranscoding", b =>
                {
                    b.Property<string>("TranscodingType")
                        .HasMaxLength(50);

                    b.Property<string>("SourceValue")
                        .HasMaxLength(100);

                    b.Property<string>("DestinationValue")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<Guid>("Id");

                    b.HasKey("TranscodingType", "SourceValue");

                    b.ToTable("SellOut_ImportTranscoding");
                });

            modelBuilder.Entity("QueryObjectPattern.DAL.Spices", b =>
                {
                    b.Property<int>("SpiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SpiceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SpiceMixName")
                        .HasMaxLength(64);

                    b.Property<string>("Supplier")
                        .HasMaxLength(50);

                    b.HasKey("SpiceId");

                    b.ToTable("Spices");
                });

            modelBuilder.Entity("QueryObjectPattern.DAL.Test1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cognome")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Test1");
                });

            modelBuilder.Entity("QueryObjectPattern.DAL.Book<QueryObjectPattern.DAL.Spices>", b =>
                {
                    b.HasOne("QueryObjectPattern.DAL.Spices", "Spice")
                        .WithMany()
                        .HasForeignKey("SpiceId");
                });
#pragma warning restore 612, 618
        }
    }
}
